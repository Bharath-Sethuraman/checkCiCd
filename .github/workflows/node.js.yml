name: Node.js CI

on:
  push:
    branches: 
      - '*'  # Trigger for pushes to any branch (including branches other than main)
  pull_request:
    branches: [ "main" ]

permissions:
  contents: write
  pull-requests: write

jobs:
  build:
    runs-on: ubuntu-latest

    strategy:
      matrix:
        node-version: [18.x, 20.x, 22.x]
        # See supported Node.js release schedule at https://nodejs.org/en/about/releases/

    steps:
      - uses: actions/checkout@v4
      - name: Use Node.js ${{ matrix.node-version }}
        uses: actions/setup-node@v4
        with:
          node-version: ${{ matrix.node-version }}
          cache: 'npm'
      - run: npm ci
      - run: npm run build --if-present
      - run: npm test

  create-pr:
    runs-on: ubuntu-latest
    needs: build
    if: github.ref != 'refs/heads/main'  # Only run on non-main branches
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Git identity
        run: |
          git config --local user.email "bharathsethuraman23@gmail.com"  # Replace with your email
          git config --local user.name "Bharath-Sethuraman"  # Replace with your name

      - name: Install GitHub CLI
        run: |
          sudo apt update
          sudo apt install -y gh
          gh auth login --with-token <<< "${{ secrets.GITHUB_TOKEN }}"

      - name: Debug branch information
        run: |
          echo "Current branch: $(git rev-parse --abbrev-ref HEAD)"
          echo "Commit difference with main:"
          git log main..HEAD --oneline

      - name: Check for new commits
        id: check-commits
        run: |
          if [ -z "$(git log main..HEAD --oneline)" ]; then
            echo "No new commits compared to main"
            echo "has_new_commits=false" >> $GITHUB_OUTPUT
          else
            echo "New commits found compared to main"
            echo "has_new_commits=true" >> $GITHUB_OUTPUT
          fi

      - name: Create Pull Request to main
        if: steps.check-commits.outputs.has_new_commits == 'true'
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          CURRENT_BRANCH=$(git rev-parse --abbrev-ref HEAD)
          gh pr create --base main --head "$CURRENT_BRANCH" --title "Auto PR to main" --body "This is an automated PR to the main branch."