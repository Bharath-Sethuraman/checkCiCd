name: Node.js CI

on:
  push:
    branches:
      - "*" # Trigger for pushes to any branch (including branches other than main)
  pull_request:
    branches: ["main"]

permissions:
  contents: write
  pull-requests: write

jobs:
  build:
    runs-on: ubuntu-latest

    strategy:
      matrix:
        node-version: [18.x, 20.x, 22.x]
        # See supported Node.js release schedule at https://nodejs.org/en/about/releases/

    steps:
      - uses: actions/checkout@v4
      - name: Use Node.js ${{ matrix.node-version }}
        uses: actions/setup-node@v4
        with:
          node-version: ${{ matrix.node-version }}
          cache: "npm"
      - run: npm ci
      - run: npm run build --if-present
      - run: npm test

  create-pr:
    runs-on: ubuntu-latest
    needs: build
    if: github.ref != 'refs/heads/main' # Only run on non-main branches
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Git identity
        run: |
          git config --local user.email "bharathsethuraman23@gmail.com"  # Replace with your email
          git config --local user.name "Bharath-Sethuraman"  # Replace with your name

      - name: Install GitHub CLI
        run: |
          sudo apt update
          sudo apt install -y gh
          gh auth login --with-token <<< "${{ secrets.GITHUB_TOKEN }}"

      - name: Get current branch name
        id: get-branch
        run: |
          CURRENT_BRANCH=$(git rev-parse --abbrev-ref HEAD)
          echo "CURRENT_BRANCH: $CURRENT_BRANCH"
          echo "CURRENT_BRANCH=$CURRENT_BRANCH" >> $GITHUB_OUTPUT

      - name: Check for existing PR
        id: check-pr
        run: |
          PR_EXISTS=$(curl -s -H "Authorization: Bearer ${{ secrets.GITHUB_TOKEN }}" \
            "https://api.github.com/repos/${{ github.repository }}/pulls?head=${{ github.repository_owner }}:${{ steps.get-branch.outputs.CURRENT_BRANCH }}&base=main" \
            | jq '.[0].number')
          echo "PR_EXISTS: $PR_EXISTS"
          if [ -z "$PR_EXISTS" ] || [ "$PR_EXISTS" == "null" ]; then
            echo "pr_exists=false" >> $GITHUB_OUTPUT
          else
            echo "pr_exists=true" >> $GITHUB_OUTPUT
            echo "pr_number=$PR_EXISTS" >> $GITHUB_OUTPUT
          fi

      - name: Create or Update PR
        if: steps.check-pr.outputs.pr_exists == 'false'
        run: |
          gh pr create --base main --head "${{ steps.get-branch.outputs.CURRENT_BRANCH }}" \
            --title "Auto PR to main" --body "This is an automated PR to the main branch."

      - name: Update existing PR
        if: steps.check-pr.outputs.pr_exists == 'true'
        run: |
          echo "Updating existing PR: https://github.com/${{ github.repository }}/pull/${{ steps.check-pr.outputs.pr_number }}"
          git push origin "${{ steps.get-branch.outputs.CURRENT_BRANCH }}"